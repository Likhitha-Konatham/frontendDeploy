# Use the official Node.js image as the base image
FROM node:16

# Set the working directory inside the container
WORKDIR /frontend-app

# Copy the package.json and package-lock.json to the directory frontend-app inside the container to install dependencies
COPY package*.json ./

# Installs the dependencies
# Required to build and run the frontend application.
RUN npm install

# Copy the rest of your application code to the container
COPY . .

# Build the React app
# Runs the custom script build defined in package.json
# For React apps or similar frontend frameworks, this generates a build/ folder with static optimized files.
RUN npm run build

# Expose the port that your app will run on
# Informs Docker that the container will listen on port 7000.
EXPOSE 7004

# Serve the React app using a simple HTTP server
# It is lightweight HTTP server and is perfect for serving static sites
# Globally installs serve, a simple static file server for Node.js.
# Used to serve the production build/ directory generated by npm run build.
RUN npm install -g serve

# Set the CMD to run the app using 'serve'
# This is the default command the container will run when started.

CMD ["serve", "-s", "build", "-l", "7004"]


